name: CI [ssr-web]

on:
  pull_request:
    paths:
      - 'packages/ssr-web/**'
      - 'packages/boxel/**'
      - 'packages/cardpay-sdk/**'
      - 'packages/did-resolver/**'
      - 'packages/eslint-config/**'
      - '.github/workflows/pr-ssr-web.yml'
      - 'package.json'
      - 'yarn.lock'

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      # using yarn to install @percy/cli suddenly started causing V8 out of
      # memory errors. According to https://stackoverflow.com/a/56568741 likely
      # there is a dependency cycle that yarn can't see through. However, npm
      # has the ability to collapse these cycles. So we are using npm to install
      # percy
      - run: npm install -g @percy/cli
      - name: Run tests
        # FIXME remove
        # env:
        #   PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_SSR_WEB }}
        run: yarn test:ssr-web:percy
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1.28
        if: always()
        with:
          check_name: 'ssr-web test results'
          files: ci-xml-test-results/ssr-web.xml

  check-if-requires-preview:
    name: Check if a preview deploy is required
    runs-on: ubuntu-latest
    outputs:
      ssr-web-files-changed: ${{ steps.ssr-web-files-that-changed.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get ssr-web files that changed
        id: ssr-web-files-that-changed
        uses: tj-actions/changed-files@v1.1.2
        with:
          files: |
            ^packages/ssr-web

  deploy-ssr-preview-staging:
    name: Deploy a ssr-web staging preview to S3
    runs-on: ubuntu-latest
    # github.event.pull_request.head.repo.full_name == github.repository: true if pr is from the original repo, false if it's from a fork
    # github.head_ref: the branch that the pull request is from. only appears on pull_request events
    if: github.event.pull_request.head.repo.full_name == github.repository && github.head_ref && needs.check-if-requires-preview.outputs.ssr-web-files-changed == 'true'
    needs: check-if-requires-preview
    steps:
      - uses: actions/checkout@v2
      - name: Deploy ssr-web preview
        uses: ./.github/actions/deploy-ember-preview
        env:
          PREVIEW_DEPLOY_AWS_ACCESS_KEY: ${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_KEY }}
          PREVIEW_DEPLOY_AWS_ACCESS_SECRET: ${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_SECRET }}
          HUB_URL: https://hub-staging.stack.cards
          SENTRY_AUTH_TOKEN: ${{ secrets.SSR_WEB_SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SSR_WEB_SENTRY_DSN }}
          S3_PREVIEW_BUCKET_NAME: ssr-web-preview.stack.cards
          S3_PREVIEW_REGION: us-east-1
        with:
          package: ssr-web
          environment: staging

  deploy-ssr-preview-production:
    name: Deploy a ssr-web production preview to S3
    runs-on: ubuntu-latest
    # github.event.pull_request.head.repo.full_name == github.repository: true if pr is from the original repo, false if it's from a fork
    # github.head_ref: the branch that the pull request is from. only appears on pull_request events
    if: github.event.pull_request.head.repo.full_name == github.repository && github.head_ref && needs.check-if-requires-preview.outputs.ssr-web-files-changed == 'true'
    needs: check-if-requires-preview
    steps:
      - uses: actions/checkout@v2
      - name: Deploy ssr-web preview
        uses: ./.github/actions/deploy-ember-preview
        env:
          PREVIEW_DEPLOY_AWS_ACCESS_KEY: ${{ secrets.PRODUCTION_EMBER_DEPLOY_AWS_ACCESS_KEY }}
          PREVIEW_DEPLOY_AWS_ACCESS_SECRET: ${{ secrets.PRODUCTION_EMBER_DEPLOY_AWS_ACCESS_SECRET }}
          HUB_URL: https://hub-staging.stack.cards
          SENTRY_AUTH_TOKEN: ${{ secrets.SSR_WEB_SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SSR_WEB_SENTRY_DSN }}
          S3_PREVIEW_BUCKET_NAME: ssr-web-preview.cardstack.com
          S3_PREVIEW_REGION: us-east-1
        with:
          package: ssr-web
          environment: production
