name: CI [main]

on:
  push:
    branches: [main]

jobs:
  lint:
    name: Lint All
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      - run: yarn lint

  test_all_but_web_client:
    name: hub, did-resolver Build/Test
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          -v /var/run/postgresql/:/var/run/postgresql
    steps:
      - name: Create database
        run: sudo -u postgres createdb hub_test
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      - run: NODE_ENV=test bin/hub db init-test
        working-directory: packages/hub
      - run: yarn run npm-run-all --aggregate-output --continue-on-error --parallel test:did-resolver test:hub

  test_boxel_and_web_client:
    name: web-client Build/Lint/Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: volta-cli/action@v1
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      - run: yarn test:boxel
      - run: yarn test:web-client

  change_check:
    name: Check which packages changed
    needs: [test_all_but_web_client, test_boxel_and_web_client]
    runs-on: ubuntu-latest
    outputs:
      hub: ${{ steps.filter.outputs.hub }}
      web_client: ${{ steps.filter.outputs.web_client }}
      boxel: ${{ steps.filter.outputs.boxel }}
      cardie: ${{ steps.filter.outputs.cardie }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            hub:
              - 'packages/hub/**'
              - 'packages/did-resolver/**'
              - '.github/workflows/push-main.yml'
              - '.github/actions/deploy-hub/**'
              - 'yarn.lock'
              - 'waypoint.hcl'
            web_client:
              - 'packages/web-client/**'
              - 'packages/boxel/**'
              - 'packages/cardpay-sdk/**'
              - 'packages/did-resolver/**'
              - '.github/workflows/push-main.yml'
              - '.github/actions/deploy-web-client/**'
              - 'yarn.lock'
            boxel:
              - 'packages/boxel/**'
              - '.github/workflows/push-main.yml'
              - 'yarn.lock'
            cardie:
              - 'packages/cardie/**'
              - '.github/workflows/push-main.yml'
              - 'yarn.lock'
              - 'waypoint.hcl'

  deploy-hub-staging:
    name: Deploy hub to staging cluster via waypoint
    needs: change_check
    if: ${{ needs.change_check.outputs.hub == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Deploy hub
        uses: ./.github/actions/deploy-hub
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_WAYPOINT_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_WAYPOINT_AWS_SECRET }}
          AWS_DEFAULT_REGION: us-east-1
          WAYPOINT_SERVER_TOKEN: ${{ secrets.STAGING_WAYPOINT_SERVER_TOKEN }}
          WAYPOINT_SERVER_ADDR: ${{ secrets.STAGING_WAYPOINT_SERVER_ADDR }}
        with:
          environment: staging
      - name: Send success notification to Discord
        if: ${{ success() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :checkered_flag: **hub** [main] has been successfully deployed to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Send failure notification to Discord
        if: ${{ failure() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :warning: **hub** [main] has failed to deploy to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy-web-client-staging:
    name: Deploy web-client to S3 staging bucket
    needs: change_check
    if: ${{ needs.change_check.outputs.web_client == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Deploy web-client
        uses: ./.github/actions/deploy-web-client
        env:
          EMBER_DEPLOY_AWS_ACCESS_KEY: ${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_KEY }}
          EMBER_DEPLOY_AWS_ACCESS_SECRET: ${{ secrets.STAGING_EMBER_DEPLOY_AWS_ACCESS_SECRET }}
          HUB_URL: https://hub-staging.stack.cards
          SENTRY_AUTH_TOKEN: ${{ secrets.WEB_CLIENT_SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.WEB_CLIENT_SENTRY_DSN }}
        with:
          environment: staging
          sentry_url_prefix: https://app-staging.stack.cards
      - name: Send success notification to Discord
        if: ${{ success() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :checkered_flag: **web-client** [main] has been successfully deployed to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Send failure notification to Discord
        if: ${{ failure() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :warning: **web-client** [main] has failed to deploy to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy-boxel:
    name: Deploy boxel to S3 bucket
    needs: change_check
    if: ${{ needs.change_check.outputs.boxel == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: volta-cli/action@v1
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --prefer-offline
      - name: Deploy preview
        run: yarn deploy:boxel
        env:
          S3_PREVIEW_INDEX_BUCKET_NAME: boxel-preview.cardstack.com
          S3_PREVIEW_ASSET_BUCKET_NAME: boxel-preview-assets.cardstack.com
          S3_PREVIEW_ASSET_BUCKET_ENDPOINT: https://s3.us-east-1.amazonaws.com/boxel-preview-assets.cardstack.com
          S3_PREVIEW_REGION: us-east-1
          PREVIEW_DEPLOY_AWS_ACCESS_KEY: ${{ secrets.PREVIEW_DEPLOY_AWS_ACCESS_KEY }}
          PREVIEW_DEPLOY_AWS_ACCESS_SECRET: ${{ secrets.PREVIEW_DEPLOY_AWS_ACCESS_SECRET }}

  deploy-cardie:
    name: Deploy cardie via waypoint
    needs: change_check
    if: ${{ needs.change_check.outputs.cardie == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up yarn cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Deploy cardie
        uses: ./.github/actions/deploy-cardie
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_WAYPOINT_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_WAYPOINT_AWS_SECRET }}
          AWS_DEFAULT_REGION: us-east-1
          WAYPOINT_SERVER_TOKEN: ${{ secrets.STAGING_WAYPOINT_SERVER_TOKEN }}
          WAYPOINT_SERVER_ADDR: ${{ secrets.STAGING_WAYPOINT_SERVER_ADDR }}
        with:
          environment: staging
      - name: Send success notification to Discord
        if: ${{ success() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :checkered_flag: **cardie** [main] has been successfully deployed to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Send failure notification to Discord
        if: ${{ failure() }}
        uses: ./.github/actions/discord-message
        with:
          token: ${{ secrets.DISCORD_TOKEN }}
          channel: ${{ secrets.DISCORD_CHANNEL }}
          message: |
            :warning: **cardie** [main] has failed to deploy to *staging*
            :arrow_forward: Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
