name: Manual Deploy [hub]

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment environment
        required: false
        default: staging
  workflow_call:
    inputs:
      environment:
        required: false
        default: staging
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init

      - name: Build
        run: yarn build
        shell: bash
        working-directory: packages/hub

      - name: Tar artifact
        run: tar -cvf artifact.tar packages/hub/dist
        shell: bash

      - uses: actions/upload-artifact@v3
        with:
          name: hub-${{ github.sha }}
          path: artifact.tar

  waypoint-build:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [hub, hub-worker, hub-event-listener]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init

      - uses: actions/download-artifact@v3
        with:
          name: hub-${{ github.sha }}

      - name: Extract artifact
        run: tar -xvf artifact.tar
        shell: bash

      - name: Set up env
        env:
          INPUT_ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          if [ "$INPUT_ENVIRONMENT" = "production" ]; then
            echo "AWS_ROLE_ARN=arn:aws:iam::120317779495:role/waypoint" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_TOKEN=${{ secrets.PRODUCTION_WAYPOINT_SERVER_TOKEN }}" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_ADDR=${{ secrets.PRODUCTION_WAYPOINT_SERVER_ADDR }}" >> $GITHUB_ENV
            cp waypoint.prod.hcl waypoint.hcl
          elif [ "$INPUT_ENVIRONMENT" = "staging" ]; then
            echo "AWS_ROLE_ARN=arn:aws:iam::680542703984:role/waypoint" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_TOKEN=${{ secrets.STAGING_WAYPOINT_SERVER_TOKEN }}" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_ADDR=${{ secrets.STAGING_WAYPOINT_SERVER_ADDR }}" >> $GITHUB_ENV
          else
            echo "unrecognized environment"
            exit 1;
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - uses: lucasmelin/setup-waypoint@v1
        with:
          version: "0.11.3"

      - name: Build ${{ matrix.app }}
        run: waypoint build -app=${{ matrix.app }} -plain -push
        env:
          WAYPOINT_SERVER_TLS: "1"

  deploy:
    name: Deploy hub
    needs: [waypoint-build]
    uses: cardstack/gh-actions/.github/workflows/waypoint-deploy.yml@main
    secrets: inherit
    with:
      app: "hub"
      environment: ${{ inputs.environment }}
      init: false

  deploy-hub-worker:
    name: Deploy hub-worker
    needs: [waypoint-build]
    uses: cardstack/gh-actions/.github/workflows/waypoint-deploy.yml@main
    secrets: inherit
    with:
      app: "hub-worker"
      environment: ${{ inputs.environment }}
      init: false

  deploy-hub-event-lister:
    name: Deploy hub-event-listener
    needs: [waypoint-build]
    uses: cardstack/gh-actions/.github/workflows/waypoint-deploy.yml@main
    secrets: inherit
    if: ${{ inputs.environment != 'staging' }}
    with:
      app: "hub-event-listener"
      environment: ${{ inputs.environment }}
      init: false
