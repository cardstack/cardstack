{{!--
TODO this component should be responsible for deciding which format of the card to render.
The process of rendering a card is fundamentally async as we'll need to load the card data,
as well as waiting for the card component to be compiled by embroider. Make sure to build in
Ember Concurrency into the rendering of the card component here.
--}}
{{#if (eq @format "isolated")}}
  {{#let (component this.isolatedComponentName) as | Isolated |}}
    <Isolated
      @card={{@card}}
      @mode={{this.mode}}
      @setFieldValue={{@setFieldValue}}
      @setFieldName={{@setFieldName}}
      @removeField={{@removeField}}
      @setNeededWhenEmbedded={{@setNeededWhenEmbedded}}
      @setPosition={{@setPosition}}
      @selectField={{@selectField}}
      @dropField={{@dropField}}
    />
    {{#if (and @dropField (eq @mode "schema")) }}
      <DropZone
        @dropField={{@dropField}}
        @position={{@card.isolatedFields.length}}
      />
    {{/if}}
  {{/let}}
{{else if (eq @format "embedded")}}
  {{#let (component this.embeddedComponentName) as | Embedded |}}
    {{#if (eq this.mode "view")}}
      <LinkTo
        @class="card-renderer--embedded-card-link"
        @route="cards.view"
        @model={{@card.id}}
      >
        <Embedded @card={{@card}} @mode={{this.mode}}/>
      </LinkTo>
    {{else}}
      <Embedded @card={{@card}} @mode={{this.mode}}/>
    {{/if}}
  {{/let}}
{{/if}}