{{! eslint is confused about indentation for else-if }}
{{! template-lint-disable block-indentation}}

{{!-- TODO: let's think of a more accessible solution here, consider making this a button--}}
{{!-- TODO: also we should also turn on a11y linting --}}

{{! TODO: Will, please resolve this linting error VVVV }}
{{! template-lint-disable no-invalid-interactive}}
<section {{on "click" (fn this.selectField @field)}}
  {{on "dragstart" (action this.startDragging @field)}}
  {{on "dragend" (action this.finishDragging)}}
  class="field {{this.fieldName}}-field {{if this.isStubField "preview"}} {{if (or @setPosition @removeField) "with-buttons"}} {{if this.isSelected "selected"}}"
  data-test-field={{this.fieldName}}
  data-test-field-mode={{@mode}}
  data-test-field-type-id={{this.fieldTypeId}}
  data-test-loaded={{stringify this.loadField.isIdle}}
>
  {{#if @setPosition}}
    <button {{on "mousedown" (action this.initDrag @field)}}
      {{on "mouseup" (action this.endDrag)}}
      {{on "dragend" (fn this.draggable.setDragging false)}}
      class="field--move-btn"
      aria-label="Drag field"
      data-test-field-renderer-move-btn
      data-test-field-renderer-move-btn-position={{@position}}
    >
    </button>
  {{/if}}

  {{#if (or (eq @mode "view") (eq @mode "layout"))}}
    <Scaffold @card={{@field}} @feature="field-view-layout" />
  {{else if (eq @mode "edit")}}
    <Scaffold
      @card={{@field}}
      @feature="field-edit-layout"
      @setCardValue={{@setCardValue}}
      @setCardReference={{@setCardReference}}
    />
  {{else if (eq @mode "schema")}}
    {{!-- TODO we should extract the schema editing stuff into a seaprate component --}}
    {{#if (includes this.schemaAttrs "title")}}
      <div
        class="schema-field-renderer"
        data-test-field-schema-renderer
        {{did-insert this.focusParentElement}}
      >
        {{!-- TODO: Change displayed logo depending on field --}}
        {{! template-lint-disable no-inline-styles }}
        <header
          class="schema-field-renderer--header"
          data-test-field-renderer-type
        >
          <div class="schema-field-renderer--header--icon">
            {{svg-jar (catalog-field-icon this.fieldType)}}
            {{!-- TODO need to add card icon to the API and render here --}}
          </div>
          <span>{{if this.stubFieldName this.stubFieldName this.fieldName}} ({{this.fieldType}})</span>
          {{#if @field.isAdopted}}
            <span class="schema-field-renderer--header--detail">Adopted</span>
          {{/if}}
        </header>
        <div class="schema-field-renderer--content">
          <div class="schema-field-renderer--name" data-test-field-renderer-label>
            {{this.fieldDisplayName}}
          </div>
          <div class="schema-field-renderer--value" data-test-field-renderer-value>
            {{this.fieldValue}}
          </div>
        </div>
      </div>
    {{/if}}
    {{#each this.schemaAttrs as |schemaAttr|}}
      {{#if (eq schemaAttr "type")}}
        <div class="field-renderer--display" data-test-schema-attr={{schemaAttr}}>
          <span class="field-renderer--display-label">Field Type</span>
          <span data-test-field-renderer-field-type>
            {{@field.csTitle}}
          </span>
        </div>
      {{else if (eq schemaAttr "label")}}
        <div data-test-schema-attr={{schemaAttr}}>
          {{#if @setFieldCardValue}}
            <TextField
              @theme="cs-dark"
              @label="Field Label"
              @value={{this.newFieldLabel}}
              @setValue={{perform this.updateFieldLabel}}
              @disabled={{@field.isAdopted}} />
          {{else}}
            <div class="field-renderer--display">
              <span class="field-renderer--display-label">Field Label</span>
              <span data-test-field-renderer-field-label>
                {{@field.csTitle}}
              </span>
            </div>
          {{/if}}
        </div>
      {{else if (eq schemaAttr "instructions")}}
        <div data-test-schema-attr={{schemaAttr}}>
          {{#if @setFieldCardValue}}
            <TextArea
              @theme="cs-dark"
              @label="Helper Text"
              @value={{this.newFieldInstructions}}
              @setValue={{perform this.updateFieldInstructions}} />
          {{else}}
            <div class="field-renderer--display">
              <span class="field-renderer--display-label">Helper Text</span>
              <span data-test-field-renderer-field-instructions>
                {{@field.csDescription}}
              </span>
            </div>
          {{/if}}
        </div>
      {{else if (and (eq schemaAttr "name") @setFieldName)}}
        <div class="ch-input-group" data-test-schema-attr={{schemaAttr}}>
          <TextField
            @id={{concat "edit-field-name-" @field.nonce "-" this.renderNonce}}
            @value={{this.newFieldName}}
            @theme="cs-dark"
            @label="Field ID"
            @class="ch-input"
            @setValue={{perform this.updateFieldName}}
            @disabled={{@field.isAdopted}}
            @pattern={{this.fieldNameRegex.source}}
            @title="Can only contain letters, numbers, dashes, and underscores."
          />
        </div>
      {{else if (eq schemaAttr "embedded")}}
        <div data-test-schema-attr={{schemaAttr}}>
          {{#if @setNeededWhenEmbedded}}
            <Checkbox
              @theme="cs-dark"
              @label="Available When Embedded"
              @checked={{this.neededWhenEmbedded}}
              @setChecked={{perform @setNeededWhenEmbedded this.currentFieldName}}
              @disabled={{@field.isAdopted}} />
          {{else}}
            <div class="field-renderer--display">
              <span class="field-renderer--display-label">Available When Embedded</span>
              <span data-test-field-renderer-embedded>
                {{if this.neededWhenEmbedded "true" "false"}}
              </span>
            </div>
          {{/if}}
        </div>
      {{else if (eq schemaAttr "required")}}
        <Checkbox
          @theme="cs-dark"
          @label="Required"
          @checked={{@field.required}}
          data-test-schema-attr={{schemaAttr}} />
      {{/if}}
    {{/each}}
  {{/if}}

  {{#if (and (not-eq @mode "view") (not-eq @mode "layout"))}}
    <div class="field--action">
      {{#if (and @removeField (not @field.isAdopted))}}
        <button {{on "click" (perform @removeField this.currentFieldName)}}
          class="field--remove-btn"
          aria-label="Remove"
          data-test-field-renderer-remove-btn
        >
        </button>
      {{/if}}
    </div>
  {{/if}}
</section>
