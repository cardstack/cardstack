{{#if @card}}
  {{#if (eq @format "isolated")}}
    <AnimatedContainer
      class="card-renderer-isolated {{this.mode}} {{if @cardSelected " selected"}} {{concat " field-count-" this.fields.length}} {{@class}}"
      tabindex="0"
      data-test-card-renderer-mode={{this.mode}}
      data-test-card-renderer-isolated={{@card.canonicalURL}}
      data-test-card-renderer={{@card.canonicalURL}}
      data-test-card-loaded={{stringify this.loadCard.isIdle}}
      {{on "focus" (action this.cardIsFocused true)}}
      {{did-insert this.focusCard true}}
      {{did-update this.cardUpdated @card @suppressCss @mode}}
      {{will-destroy this.removeCardCss}}
    >
      {{#if this.cardstackSession.isAuthenticated}}
        {{#if (eq this.mode "schema")}}
          <CardRendererHeader
            @cardSelected={{true}}
            @card={{@card}}
            @mode={{this.mode}}
            @contextMenuOpen={{@contextMenuOpen}}
            @setContextMenu={{@setContextMenu}}
          />
        {{/if}}
      {{/if}}

      <AnimatedContainer
        class="card-renderer-isolated--animated-content"
      >
        {{#unless @suppressHeader}}
          {{#if (and this.cardstackSession.isAuthenticated (eq this.mode "view"))}}
            <div class="card-renderer__controls" data-test-card-renderer-controls>
              <LinkTo
                @route="cards.card.view.edit"
                @model={{@card.canonicalURL}}
                @class="card-renderer__controls-btn"
                data-test-mode-indicator-link="view"
              >
                Edit
              </LinkTo>
              <DropdownMenuButton @icon="gear" data-test-card-renderer-dropdown-menu>
                <ul class="card-renderer__dropdown-menu-list">
                  <li>
                    <LinkTo @route="cards.card.configure.layout" @model={{@card.canonicalURL}} data-test-configure-option>Configure</LinkTo>
                  </li>
                </ul>
              </DropdownMenuButton>
            </div>
          {{/if}}
        {{/unless}}
        <div
          class="card-renderer-isolated--card-container {{if (and this.cardstackSession.isAuthenticated @cardSelected) "selected"}}"
        >
          <div>
            <AnimatedContainer>
              {{#animated-value this watch=this.animatedWatchFields use=@contentTransition group="content"}}
                {{!-- This is the card boundary, please don't set any card specific classes any higher in the DOM than this. --}}
                {{!-- If we need card specific styling above this level, then let's chat about it.                           --}}
                <div class="isolated-card-boundary {{if this.isViewOrLayoutMode (concat (safe-css-string (if @card.canonicalURL @card.canonicalURL @card.adoptsFromURL)) "--isolated") }}">
                  {{#if this.isViewOrLayoutMode}}
                    <div class="isolated-card-label">{{@card.csTitle}}</div>
                  {{/if}}
                  {{#if @dropField}}
                    <DropZone
                      @card={{@card}}
                      @dropField={{@dropField}}
                      @position={{0}}
                      @toggleStubField={{this.toggleStubField}}
                    />
                  {{/if}}
                  <Scaffold
                    @card={{@card}}
                    @feature="isolated-layout"
                    @fields={{this.fields}}
                    @mode={{this.mode}}
                    @setFieldName={{@setFieldName}}
                    @setCardValue={{@setCardValue}}
                    @setCardReference={{@setCardReference}}
                    @removeField={{@removeField}}
                    @toggleStubField={{this.toggleStubField}}
                    @setNeededWhenEmbedded={{@setNeededWhenEmbedded}}
                    @setPosition={{@setPosition}}
                    @selectField={{@selectField}}
                    @selectedField={{@selectedField}}
                    @selectedFieldName={{@selectedFieldName}}
                    @dropField={{@dropField}}
                    @loadedField={{perform this.loadedField}}
                  />
                </div>
              {{/animated-value}}
            </AnimatedContainer>
          </div>
        </div>
      </AnimatedContainer>
    </AnimatedContainer>
  {{else if (eq @format "embedded")}}
    <div
      class="card-renderer-embedded {{concat (safe-css-string (if @card.canonicalURL @card.canonicalURL @card.adoptsFromURL)) "--embedded" }} {{@class}}"
      data-test-card-renderer-embedded={{@card.canonicalURL}}
      data-test-card-renderer={{@card.canonicalURL}}
      data-test-card-loaded={{stringify this.loadCard.isIdle}}
      {{will-destroy this.removeCardCss}}
    >
      {{#if (and (eq this.mode "view") (not @preventIsolation))}}
        <LinkTo
          @class="card-renderer--embedded-card-link"
          @route="cards.card.view"
          @model={{@card.canonicalURL}}
          aria-label={{@card.csTitle}}
        >
          {{#unless @suppressHeader}}
            <div class="card-renderer-embedded__label">
              {{@card.csTitle}}
            </div>
          {{/unless}}
          <Scaffold
            @card={{@card}}
            @fields={{this.fields}}
            @feature="embedded-layout"
            @loadedField={{perform this.loadedField}}
            @mode={{this.mode}} />
        </LinkTo>
      {{else}}
        <div class="card-renderer-embedded--card-container">
          <Scaffold
            @card={{@card}}
            @fields={{this.fields}}
            @feature="embedded-layout"
            @loadedField={{perform this.loadedField}}
            @mode={{this.mode}} />
        </div>
        {{#if @showName}}
          <div class="card-renderer-embedded--card-label">{{@card.csTitle}}</div>
        {{/if}}
      {{/if}}
    </div>
  {{/if}}

  {{!-- this is only for when we are loading the css and want to show a
  placeholder style. After the css is loaded the CssManager component takes
  over the handling of this card's css --}}
  {{#unless @suppressCss}}
    {{#if (and (not this.css) this.loadCard.isRunning)}}
      <style
        data-test-css-loading={{@card.canonicalURL}}
        data-test-css-format={{@format}}
      >
        {{#if (eq @format "isolated")}}
          {{scope-css this.loadingIsolatedCss @card @format}}
        {{else}}
          {{scope-css this.loadingEmbeddedCss @card @format}}
        {{/if}}
      </style>
    {{/if}}
  {{/unless}}
{{/if}}