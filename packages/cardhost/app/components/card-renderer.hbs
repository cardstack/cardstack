{{#if @card}}
  {{#if (eq @format "isolated")}}
    <AnimatedContainer
      class="card-renderer-isolated
        {{this.mode}}
        {{if (and this.cardstackSession.isAuthenticated @cardSelected) "selected"}}
        {{concat "field-count-" this.fields.length}}
        {{@class}}
      "
      tabindex="0"
      data-test-card-renderer-mode={{this.mode}}
      data-test-card-renderer-isolated={{@card.canonicalURL}}
      data-test-card-renderer={{@card.canonicalURL}}
      data-test-card-loaded={{stringify this.loadCard.isIdle}}
      {{!-- {{on "focus" (action this.cardIsFocused true)}}
      {{on "mouseenter" (action this.setIsSelected true)}} {{on "mouseleave" (action this.setIsSelected false)}}
      {{did-insert this.focusCard true}} --}}
      {{did-update this.cardUpdated @card @suppressCss @mode}}
      {{will-destroy this.removeCardCss}}
    >
      {{#unless @suppressHeader}}
        {{#unless this.isViewOrEditMode}}
          <AnimatedContainer class="card-renderer-isolated--animated-header">
            {{#animated-value this watch=this.animatedWatchFields use=this.headerAnimation group="header"}}
              <CardRendererHeader
                @cardSelected={{true}}
                @card={{@card}}
                @buttonRoute="cards.card.view"
                @buttonText="Done Editing"
                @mode={{this.mode}}
                @contextMenuOpen={{@contextMenuOpen}}
                @setContextMenu={{@setContextMenu}}
              />
            {{/animated-value}}
          </AnimatedContainer>
        {{/unless}}
      {{/unless}}
      {{!-- This is the card boundary, please don't set any card specific classes any higher in the DOM than this. --}}
      {{!-- If we need card specific styling above this level, then let's chat about it.                           --}}
      <AnimatedContainer
        class="card-renderer-isolated--animated-content
          {{concat (safe-css-string (if @card.canonicalURL @card.canonicalURL @card.adoptsFromURL)) "--isolated" }}
        "
      >
        {{#animated-value this watch=this.animatedWatchFields use=this.cardTransition group="body"}}
          <div
            class="card-renderer-isolated--card-container
            {{if (and this.cardstackSession.isAuthenticated @cardSelected) "selected"}}
            "
          >
            {{#if (or this.isViewMode (eq this.mode "preview"))}}
              <div class="card-renderer-isolated__label">{{humanize @card.csTitle}}</div>
            {{/if}}
            {{#if (and this.isViewMode this.cardstackSession.isAuthenticated)}}
              <div class="card-renderer__controls">
                <LinkTo
                  @route="cards.card.edit.fields"
                  @model={{@card.canonicalURL}}
                  @class="card-renderer__controls-btn"
                >
                  Edit
                </LinkTo>
              </div>
            {{/if}}
            {{#if (and this.isEditMode this.cardstackSession.isAuthenticated)}}
              <div class="card-renderer__controls card-renderer__controls--edit">
                <LinkTo
                  @route="cards.card.view"
                  @model={{@card.canonicalURL}}
                  @class="card-renderer__controls-btn"
                >
                  Edit Mode {{svg-jar "x" width="10px" height="10px"}}
                </LinkTo>
              </div>
            {{/if}}
            <div>
              <AnimatedContainer>
                {{#animated-value this watch=this.animatedWatchFields use=@contentTransition group="content"}}
                  <div>
                    {{#if @dropField}}
                      <DropZone
                        @card={{@card}}
                        @dropField={{@dropField}}
                        @position={{0}}
                        @toggleStubField={{this.toggleStubField}}
                      />
                    {{/if}}
                    <Scaffold
                      @card={{@card}}
                      @feature="isolated-layout"
                      @fields={{this.fields}}
                      @mode={{this.mode}}
                      @setFieldName={{@setFieldName}}
                      @setCardValue={{@setCardValue}}
                      @setCardReference={{@setCardReference}}
                      @removeField={{@removeField}}
                      @toggleStubField={{this.toggleStubField}}
                      @setNeededWhenEmbedded={{@setNeededWhenEmbedded}}
                      @setPosition={{@setPosition}}
                      @selectField={{@selectField}}
                      @selectedField={{@selectedField}}
                      @selectedFieldName={{@selectedFieldName}}
                      @dropField={{@dropField}}
                      @loadedField={{perform this.loadedField}}
                    />
                  </div>
                {{/animated-value}}
              </AnimatedContainer>
            </div>
          </div>
        {{/animated-value}}
      </AnimatedContainer>
    </AnimatedContainer>
  {{else if (eq @format "embedded")}}
    <div
      class="card-renderer-embedded
        {{concat (safe-css-string (if @card.canonicalURL @card.canonicalURL @card.adoptsFromURL)) "--embedded" }}
        {{@class}}
      "
      {{on "mouseenter" (action this.setIsSelected true)}} {{on "mouseleave" (action this.setIsSelected false)}}
      role="button"
      data-test-card-renderer-embedded={{@card.canonicalURL}}
      data-test-card-renderer={{@card.canonicalURL}}
      data-test-card-loaded={{stringify this.loadCard.isIdle}}
      {{will-destroy this.removeCardCss}}
    >
      {{#if (and (eq this.mode "view") (not @preventIsolation))}}
        <LinkTo
          @class="card-renderer--embedded-card-link"
          @route="cards.card.view"
          @model={{@card.canonicalURL}}
          aria-label={{@card.csTitle}}
        >
          <div class="card-renderer-embedded__label">
            {{humanize @card.csTitle}}
          </div>
          <Scaffold
            @card={{@card}}
            @fields={{this.fields}}
            @feature="embedded-layout"
            @loadedField={{perform this.loadedField}}
            @mode={{this.mode}} />
        </LinkTo>
      {{else}}
        <div class="card-renderer-embedded--card-container">
          <Scaffold
            @card={{@card}}
            @fields={{this.fields}}
            @feature="embedded-layout"
            @loadedField={{perform this.loadedField}}
            @mode={{this.mode}} />
        </div>
        {{#if @showName}}
          <div class="card-renderer-embedded--card-label">{{@card.csTitle}}</div>
        {{/if}}
      {{/if}}
    </div>
  {{/if}}

  {{!-- this is only for when we are loading the css and want to show a
  placeholder style. After the css is loaded the CssManager component takes
  over the handling of this card's css --}}
  {{#unless @suppressCss}}
    {{#if (and (not this.css) this.loadCard.isRunning)}}
      <style
        data-test-css-loading={{@card.canonicalURL}}
        data-test-css-format={{@format}}
      >
        {{#if (eq @format "isolated")}}
          {{scope-css this.loadingIsolatedCss @card @format}}
        {{else}}
          {{scope-css this.loadingEmbeddedCss @card @format}}
        {{/if}}
      </style>
    {{/if}}
  {{/unless}}
{{/if}}