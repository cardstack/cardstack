const { writeFileSync, removeSync, ensureDirSync, readFileSync } = require('fs-extra');
const { join, resolve } = require('path');
const { sync: globSync } = require('glob');

const sourceAbiDir = resolve(join(__dirname, '..', 'contracts', 'abi'));
const generatedDir = join(__dirname, '..', 'generated');
const generatedFile = join(generatedDir, 'supported-abis.ts');

removeSync(generatedFile);
ensureDirSync(generatedDir);

let supportedAbisMap = {};

let paths = globSync(join(sourceAbiDir, 'v*', '*.ts'));
for (const p of paths) {
  if (p.endsWith('.d.ts')) {
    continue;
  }
  const parts = p.split('/');
  const contractName = parts.pop().replace('.ts', '');
  const version = parts.pop();
  supportedAbisMap[version] = supportedAbisMap[version] || {};
  const abiContents = readFileSync(p, { encoding: 'utf8' });
  const abiJson = eval(abiContents.replace(/export default /, ''));
  supportedAbisMap[version][contractName] = abiJson;
}

writeFileSync(
  generatedFile,
  `// @ts-nocheck
// This file is auto-generated by scripts/generate-supported-abis.ts
// Language: typescript
// Path: packages/cardpay-sdk/bin/codegen.ts
import { AbiItem } from 'web3-utils';

interface SupportedAbisMap {
  [version: string]: {
    [contractName: string]: AbiItem[];
  }
}

export const SUPPORTED_ABIS: SupportedAbisMap = ${JSON.stringify(supportedAbisMap, null, 2)};
// mitigation for unexpected vs code debugger breakpoint
function noop() {};
noop();
`
);
console.log(`Generated ${generatedFile}`);
