{{!-- template-lint-disable no-inline-styles --}}
<Freestyle::Usage @name="CardContainer">
  <:description>
    A wrapper container for a card.
  </:description>
  <:example>
    <Boxel::CardContainer
      @displayBoundaries={{this.displayBoundaries}}
      @isHighlighted={{this.isHighlighted}}
    >
      {{!-- Usage with Boxel::Header component --}}
        <Boxel::Header
          @header="Card"
          @isHighlighted={{this.isHighlighted}}
        />
        <div>Card Here</div>
    </Boxel::CardContainer>
  </:example>
  <:api as |Args|>
    <Args.Bool
      @name="displayBoundaries"
      @description="(styling) Displays card boundary"
      @defaultValue={{false}}
      @value={{this.displayBoundaries}}
      @onInput={{fn (mut this.displayBoundaries)}}
    />
    <Args.Bool
      @name="isHighlighted"
      @description="(styling) Highlights card boundary"
      @defaultValue={{false}}
      @value={{this.isHighlighted}}
      @onInput={{fn (mut this.isHighlighted)}}
    />
    <Args.Yield
      @description="Unstyled area for custom card content and fields"
    />
  </:api>
</Freestyle::Usage>

<FreestyleAnnotation>
  <Boxel::CardContainer @displayBoundaries={{true}}>
    <div style="display:grid; grid-template-rows: 5rem;">
      <div style="margin: auto">
        One strategy to consider is using a root element with `display: grid` to layout the contents of your card.
      </div>
    </div>
  </Boxel::CardContainer>
</FreestyleAnnotation>