<Freestyle::Usage @name="DropdownButton">
  <:example>
    <Boxel::DropdownButton
      @button={{this.button}}
      @size={{this.size}}
      @iconSize={{this.iconSize}}
      as |ddb|
    >
      <ddb.Menu
        @items={{array
          (menu-item "Duplicate" (fn this.log "Duplicate menu item clicked"))
          (menu-item "Share" (fn this.log "Share menu item clicked"))
          (menu-divider)
          (menu-item
            "Remove" (fn this.log "Remove menu item clicked") dangerous=true
          )
        }}
      />
    </Boxel::DropdownButton>
  </:example>
  <:api as |Args|>
    <Args.String
      @name="button"
      @description="the name to use as the aria-label and added on the trigger element as a css class. If @icon is not specified, this value is also used to specify an svg to use."
      @value={{this.button}}
      @required={{true}}
      @onInput={{fn (mut this.button)}}
    />
    <Args.String
      @name="icon"
      @description="the name of the svg to show"
      @value={{this.icon}}
      @defaultValue="falls back to the value of @button"
      @onInput={{fn (mut this.icon)}}
    />
    <Args.Number
      @name="size"
      @description="the size of the button"
      @value={{this.size}}
      @defaultValue={{40}}
      @min={{20}}
      @max={{80}}
      @onInput={{fn (mut this.size)}}
    />
    <Args.Number
      @name="iconSize"
      @description="the size of the icon"
      @value={{this.iconSize}}
      @defaultValue={{16}}
      @min={{8}}
      @max={{36}}
      @onInput={{fn (mut this.iconSize)}}
    />
    <Args.Yield
      @description="The provided block is rendered when the button is triggered. Yields a `Menu` component (instance of Boxel::Menu that is preconfigured with @closeMenu defined) and the `dropdown` object documented in https://github.com/cibernox/ember-basic-dropdown"
    />
  </:api>
</Freestyle::Usage>