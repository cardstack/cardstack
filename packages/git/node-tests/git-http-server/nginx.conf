# /etc/nginx/nginx.conf

user root;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes 1;

# Configures default error logger.
error_log /var/log/nginx/error.log debug;
daemon off;

events {
  # The maximum number of simultaneous connections that can be opened by
  # a worker process.
  worker_connections 1024;
}

http {
  # Includes mapping of file name extensions to MIME types of responses
  # and defines the default type.
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Specifies the maximum accepted body size of a client request, as
  # indicated by the request header Content-Length. If the stated content
  # length is greater than this size, then the client receives the HTTP
  # error code 413. Set to 0 to disable.
  client_max_body_size 10m;

  # Timeout for keep-alive connections. Server will close connections after
  # this time.
  keepalive_timeout 65;

  # Sendfile copies data between one FD and other from within the kernel,
  # which is more efficient than read() + write().
  sendfile on;

  # Don't buffer data-sends (disable Nagle algorithm).
  # Good for sending frequent small bursts of data in real time.
  tcp_nodelay on;

  # Specifies that our cipher suits should be preferred over client ciphers.
  ssl_prefer_server_ciphers on;

  ssl_session_cache shared:SSL:1m;

  gzip on;

  # Set the Vary HTTP header as defined in the RFC 2616.
  gzip_vary on;

  # Enable checking the existence of precompressed files.
  #gzip_static on;


  # Specifies the main log format.
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

  # Sets the path, format, and configuration for a buffered log write.
  access_log /var/log/nginx/access.log main;


  server {
      listen       80;

      location ~ /git(/.*) {
          auth_basic "Git Test";
          auth_basic_user_file /etc/nginx/auth/git;
          client_max_body_size 0;
          fastcgi_param SCRIPT_FILENAME /usr/libexec/git-core/git-http-backend;
          include fastcgi_params;
          fastcgi_param GIT_HTTP_EXPORT_ALL "";
          fastcgi_param GIT_PROJECT_ROOT /root/data-test;
          fastcgi_param PATH_INFO $1;
          fastcgi_param REMOTE_USER $remote_user;
          fastcgi_pass  unix:/var/run/fcgiwrap.sock;
      }
  }

}